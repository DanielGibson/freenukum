import os

if (os.environ.has_key('CFLAGS')):
  cflags = os.environ['CFLAGS'].split()
else:
  cflags = ['-Wall']

env = Environment(CCFLAGS = cflags, LDFLAGS = [])

env.ParseConfig('pkg-config glib-2.0 --cflags')
env.ParseConfig('pkg-config glib-2.0 --libs')

env.ParseConfig('sdl-config --cflags')
env.ParseConfig('sdl-config --libs')

if ARGUMENTS.get('coverage', 0):
  env.Append(CCFLAGS = ['-fprofile-arcs','-ftest-coverage'])
  env.Append(LIBS = ['gcov'])

if ARGUMENTS.get('debug', 0):
  env.Append(CCFLAGS = ['-ggdb'])

if (os.environ.has_key('DESTDIR')):
  installroot = os.environ['DESTDIR']
else:
  installroot = '/'

if (os.environ.has_key('BINPREFIX')):
  bindir = installroot + os.environ['BINPREFIX']
else:
  bindir = installroot + 'usr/local/bin'

freenukum = env.Program('freenukum', [
  'fn_picture_splash.c',
  'fn_picture.c',
  'fn_draw.c',
  'fn_msgbox.c',
  'fn_tile.c',
  'fn_tilecache.c',
  'fn_error_cmdline.c',
  'fn_error.c',
  'fn_mainmenu.c',
  'fn_infobox.c',
  'fn_settings.c',
  'fn_game.c',
  'fn_borders.c',
  'fn_text.c',
  'fn_bot.c',
  'fn_hero.c',
  'fn_item.c',
  'fn_level.c',
  'fn_animation.c',
  'freenukum.c'])

env.Install(bindir, freenukum)
env.Alias('install', bindir)

if ARGUMENTS.get('tests', 0):
  env.Program('fn_test_draw', [
    'fn_test_draw.c',
    'fn_draw.c'])

  env.Program('fn_test_drop', [
    'fn_test_drop.c',
    'fn_drop.c',
    'fn_tile.c',
    'fn_draw.c'])

  env.Program('fn_test_tile', [
    'fn_test_tile.c',
    'fn_tile.c',
    'fn_draw.c'])

  env.Program('fn_test_picture', [
    'fn_test_picture.c',
    'fn_picture.c',
    'fn_draw.c'])

  env.Program('fn_test_tilecache', [
    'fn_test_tilecache.c',
    'fn_tilecache.c',
    'fn_draw.c',
    'fn_tile.c',
    'fn_error.c',
    'fn_error_cmdline.c'])

  env.Program('fn_test_level_loader', [
    'fn_test_level_loader.c',
    'fn_tilecache.c',
    'fn_draw.c',
    'fn_level.c',
    'fn_hero.c',
    'fn_animation.c',
    'fn_item.c',
    'fn_bot.c',
    'fn_tile.c'])

  env.Program('fn_test_msgbox', [
    'fn_test_msgbox.c',
    'fn_msgbox.c',
    'fn_draw.c',
    'fn_tile.c',
    'fn_tilecache.c',
    'fn_text.c'])

  env.Program('fn_test_settings', [
    'fn_test_settings.c',
    'fn_settings.c'])

  env.Program('fn_test_error', [
    'fn_error.c',
    'fn_test_error.c'])

  env.Program('fn_test_mainmenu', [
    'fn_test_mainmenu.c',
    'fn_msgbox.c',
    'fn_tilecache.c',
    'fn_tile.c',
    'fn_draw.c',
    'fn_text.c'])

  env.Program('fn_test_picture_splash', [
    'fn_picture_splash.c',
    'fn_picture.c',
    'fn_test_picture_splash.c',
    'fn_error.c',
    'fn_error_cmdline.c',
    'fn_draw.c',
    'fn_msgbox.c',
    'fn_tilecache.c',
    'fn_tile.c',
    'fn_text.c'])

  env.Program('fn_test_infobox', [
    'fn_test_infobox.c',
    'fn_infobox.c',
    'fn_msgbox.c',
    'fn_tilecache.c',
    'fn_tile.c',
    'fn_draw.c',
    'fn_text.c'])

  env.Program('fn_test_borders', [
    'fn_test_borders.c',
    'fn_borders.c',
    'fn_tilecache.c',
    'fn_tile.c',
    'fn_error.c',
    'fn_error_cmdline.c',
    'fn_draw.c',
    'fn_text.c'])

  env.Program('fn_test_hero', [
    'fn_test_hero.c',
    'fn_level.c',
    'fn_animation.c',
    'fn_item.c',
    'fn_bot.c',
    'fn_hero.c',
    'fn_error.c',
    'fn_error_cmdline.c',
    'fn_tilecache.c',
    'fn_tile.c',
    'fn_draw.c'])

  env.Program('fn_test_effect', [
    'fn_test_effect.c',
    'fn_picture.c',
    'fn_draw.c',
    'fn_effect.c',
    'fn_error.c',
    'fn_error_cmdline.c'])
